#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#   types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04
    
   run: echo "Deleting files, please wait ..."
   run: sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
   run: sudo swapoff /swapfile
   run: sudo rm -f /swapfile
   run: sudo apt-get update
   
   run: sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
   
   run: sudo git clone -b dev-19.07 https://github.com/Lienol/openwrt
   
   run: sudo cd openwrt
   
   run: sudo ./scripts/feeds clean

   run: sudo ./scripts/feeds update -a

   run: sudo ./scripts/feeds install -a
        make defconfig
#    - name: SSH connection to Actions
#      uses: P3TERX/debugger-action@master

    - name: Download package
      run: |
        cd openwrt && make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Multi-thread compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc)
    - name: Single-thread compile
      if: failure()
      run: |
        cd openwrt
        make -j1 V=s
    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: OpenWrt_bin
        path: openwrt/bin

    - name: Organize files
      if: always()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"
    - name: Upload firmware
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}
